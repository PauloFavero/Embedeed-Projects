/* ***************************************************************** */
/* File name:        tc_hal.c                                        */
/* File description: Header file containing the functions/methods    */
/*                   interfaces for handling timers and counter      */
/*                   from the FRDM-KL25Z board                       */
/* Author name:      dloubach                                        */
/* Creation date:    23out2015                                       */
/* Revision date:    21may2017                                       */
/* ***************************************************************** */

#ifndef SOURCES_TC_HAL_H_
#define SOURCES_TC_HAL_H_

#include "fsl_lptmr_driver.h"

/* ************************************************ */
/* Method name:        tc_installLptmr              */
/* Method description: Low power timer 0            */
/*                    initialization and start      */
/* Input params:      uiTimeInUs:                   */
/*                    time in micro seconds         */
/*                    tUserCallback                 */
/*                    function pointer to be called */
/*                    when counter achieves         */
/*                    uiTimeInUs                    */
/* Output params:     n/a                           */
/* ************************************************ */
void tc_installLptmr0(uint32_t uiTimeInUs, lptmr_callback_t tUserCallback);

/* ************************************************ */
/* Method name:        tc_initTachometer            */
/* Method description: Inicialize and set           */
/* 					   the Tachometer               */
/*                   						        */
/* Input params:      n/a						    */
/* Output params:     n/a                           */
/* ************************************************ */
void tc_initTachometer();

/* ************************************************ */
/* Method name:        tc_calculateRps              */
/* Method description: Calculate the                */
/* 					  velocity of cooler in RPS     */
/* Input params:      velocity of cooler            */
/* Output params:     n/a                           */
/* ************************************************ */
void tc_calculateRps(int iNum);

/* ************************************************ */
/* Method name:        tc_readTachometer            */
/* Method description: Calculate pulses             */
/* 					   generated by cooler          */
/* Input params:      n/a                           */
/* Output params:     TPM0_CNT - Returns the Pulses */
/* ************************************************ */
int tc_readTachometer();

/* ************************************************ */
/* Method name:        tc_clearTacometer            */
/* Method description: Clear the register, which    */
/* 					   counts the pulses            */
/* Input params:      n/a                           */
/* Output params:     n/a							*/
/* ************************************************ */
void tc_clearTachometer();

#endif /* SOURCES_TC_HAL_H_ */
